#! /usr/bin/python
# --------------------------------------------
#             Wifi Pentest Tool

#         Author : Batuhan Türkarslan

#     GitHub : https://github.com/TURKZEN
# --------------------------------------------

from get_nic import getnic
from subprocess import call
from subprocess import check_output as check 
from subprocess import CalledProcessError
from time import sleep
from os import name,system
from sys import exit


Interface = []
MonitorMode = []
thereIsanUpdate = []

def space():
    print()

def update(): 
    
    updateOutput = check(["sudo","git", "pull","https://github.com/TURKZEN/WiFiPenTest"])
    updateOutput = updateOutput.decode()
    updateOutput = updateOutput.split()
    updateOutput = updateOutput[::-1]
    
    if updateOutput[0] == "güncel.":
        clean()
        print("[+] Güncelleme Başarılı")
        sleep(2)
        clean()
        Main()
    
    else:
        updateOutput =updateOutput[::-1]
        
        if updateOutput[0] == "Güncelleniyor:":
            clean()
            print("Yeni Bir Güncelleme var !")
            print("Güncelleniyor...")
            sleep(3)
            update()
        else:
            clean()
            print("[-] Güncelleme Başarısız ! ")
            sleep(3)
            clean()
            Main()

def updateCheck():
    updateOutput = check(["sudo","git", "pull","https://github.com/TURKZEN/WiFiPenTest"])
    updateOutput = updateOutput.decode()
    updateOutput = updateOutput.split()

    if updateOutput[0] == "Güncelleniyor:":
        thereIsanUpdate = thereIsanUpdate.clear()
        thereIsanUpdate = thereIsanUpdate.append("Yeni Bir Güncelleme Var !")
    


def IsMonitorModeTurnedOn():
    output = check(["iwconfig",Interface[0]])
    output = output.decode()
    output = output.split()

    if output[3] == "Mode:Monitor":
        MonitorMode.clear()
        MonitorMode.append("Açık")
        print("Monitor Mode Aktif !")

    else:
        MonitorMode.clear()
        MonitorMode.append("Kapalı")
        print("Monitor Mode Aktif Değil !")

def InterfaceDedection():
    if not Interface:
        interfaces = getnic.interfaces()
        getnic.ipaddr(interfaces)
        
        for i in interfaces:
                
                if i == "wlan0":
                    Interface.append("wlan0")
                    print("Interface : ",Interface[0])
                elif i == "wlan0mon":
                    Interface.append("wlan0mon")
                    print("Interface : ",Interface[0])
                elif i == "wlp2s0":             
                    Interface.append("wlp2s0")
                    print("Interface : ",Interface[0])

        if not Interface:
            interface = "İnterface Bulunamadı !"
            print("Interface Bulunamadı ! ")
    else:
        print("Interface : ",Interface[0])
        
def InterfaceChange():
    
    space()
    print("Interface : ",Interface[0])
    space()
    isItright = input("Interface doğru mu ? [E/h] : ")
    space()
    if isItright == "e" or isItright ==  "E":
        print("Evet seçildi devam ediliyor...")
        sleep(1)
        clean()
        Main()

    elif isItright == "h" or isItright ==  "H":
        interface = input("WiFi Interface giriniz : ")
        if interface == "":
            print("Lütfen Bir Interface giriniz ! ")
            InterfaceIsTrue()
        else:
            Interface.clear()
            Interface.append(interface)
            space()
            print("[+] Interface Başarıyla değiştirildi ! ")
            space()
            print("Yeni Interface : ",interface)
            sleep(3)
            clean()
            Main()
        
    else:
        print("Lütfen doğru bir seçim yapınız !")
        sleep(2)
        InterfaceIsTrue()

def monitorMode():
    space()
    print("Sudo Şifresi İsteyebilir")
    space()
    output = check(["sudo","airmon-ng","start",Interface[0]])
    output = output.decode()
    output = output.split()
    output = output[::-1]
    space()
    if output[0] == "enabled)":
        print("[+] Monitor Mod Aktif edildi ! ")
        sleep(3)
        clean()
        Main()
    else:
        print("[-] Monitör Mod aktif edilemedi ! ")
        sleep(3)
        clean()
        Main()

def scanAround():
    if MonitorMode[0] == "Açık":
        call(["sudo", "airodump-ng",Interface[0]])
    else:
        clean()
        print("Monitor Mode Aktif Edilmesi gerekiyor...")
        sleep(2)        
        Main()

def scanNetwork():
    pass

def deauth():
    pass

def monitorModeClose():
    try:
        output = check(["sudo","airmon-ng","stop",Interface[0]])
    except CalledProcessError:
        clean()
        print("Monitor Mod Zaten Aktif DEĞİL !")
        sleep(2)
        clean()
        Main()
    output = output.decode()
    output = output.split()
    output = output[::-1]
    
    space()
    if output[0] == "disabled)":
        print("[+] Monitor Mod Devre Dışı ! ")
        sleep(3)
        clean()
        Main()
    else:
        print("[-] Monitör Mod Devre Dışı bırakılamadı ! ")
        sleep(3)
        clean()
        Main()

def clean():
    if name == "nt":
        call(["cls"])
    else:
        call(["clear"])

def Exit():
    space()
    print("Çıkış Yapılıyor..")
    sleep(1)
    clean()
    print("Çıkış Yapıldı !")

def mainMenu():
    
    menu = """
    1) Monitor Modu Aktif Et
    2) Monitor Modu Devre dışı bırak

    3) Çevre WiFi Ağlarını Tara
    4) Belirli WiFi Ağına bağlı cihazları tara 
    5) Deauth - Yetkisizlendirme Saldırısı (Ağdan atar)

    10) Interface Değiştir (Algılanan Interface Yanlış ise)
    11) Güncelle ({})

    99) Çıkış
    """.format(thereIsanUpdate)
    print(menu)
    choose = input("Seçim : ")

    if choose == "1":
        monitorMode()
    elif choose == "2":
        monitorModeClose()
    elif choose == "3":
        scanAround()
    elif choose == "4":
        scanNetwork()
    elif choose == "5":
        deauth()
    elif choose == "10":
        InterfaceChange()
    elif choose == "11":
        update()
    elif choose == "99":
        Exit()
    
    else:
        clean()
        print("Lütfen doğru bir seçim yapınız !")
        sleep(2)
        clean()
        Main()

def banner():
    print("""
    
                    _       ___ _______ ____           ______          __ 
                    | |     / (_) ____(_) __ \___  ____/_  __/__  _____/ /_
                    | | /| / / / /_  / / /_/ / _ \/ __ \/ / / _ \/ ___/ __/
                    | |/ |/ / / __/ / / ____/  __/ / / / / /  __(__  ) /_  
                    |__/|__/_/_/   /_/_/    \___/_/ /_/_/  \___/____/\__/  

                                Author : Batuhan Türkarslan
                                GitHub : https://github.com/TURKZEN
    

    """)
    sleep(1)
def Main():
    clean()
    banner()
    InterfaceDedection()
    IsMonitorModeTurnedOn() 
    updateCheck()
    mainMenu()

if __name__ == "__main__":
    if name == "nt":
        print("Windows için henüz uygun değil !")
    else:
        try:
            Main()

        except KeyboardInterrupt:
            Exit()

        except EOFError:
            Exit()
        
        except CalledProcessError:
            
            print("""

            HATA !

            Interface'i kontrol et : {}

            Girilen Interface var olmayabilir,doğru olmayabilir 
            veya airmon-ng yüklü olmayabilir !
            """.format(Interface[0]))
            
            
        

